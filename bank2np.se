
def idris_Effects_46_dropEnv(loc0, loc1, loc2, loc3, loc4): #Effects.dropEnv
    if loc4[0] == 2:
      if loc3[0] == 1:
        return self.idris_Effects_46_dropEnv(0, 0, 0, loc3[3], loc4[1])
    elif loc4[0] == 1:
      if loc3[0] == 1:
        retVal = [1,loc6,loc3[2],self.idris_Effects_46_dropEnv(0, 0, 0, loc3[3], loc4[1])]
        return retVal
    elif loc4[0] == 0:
      return [0]


def idris_Effects_46_eff(loc0, loc1, loc2, loc3, loc4, loc5, loc6, loc7): #Effects.eff
    if loc6[0] == 5:
      return self.idris_Effects_46_eff(0, 0, 0, 0, 0, [1,loc5[1],loc5[2],[0]], loc6[1], [65693,loc7])
    elif loc6[0] == 2:
      return self.idris_Effects_46_execEff(0, 0, 0, 0, 0, 0, 0, loc5, loc6[1], loc6[2], loc7)
    elif loc6[0] == 1:
      return self.idris_Effects_46_eff(0, 0, 0, 0, 0, loc5, loc6[1], [65695,loc6[2],loc7])
    elif loc6[0] == 3:
      loc15 = self.idris_Effects_46_dropEnv(0, 0, 0, loc5, loc6[1])
      loc16 = [65697,loc7,loc6[1],loc5]
      retVal = self.idris_Effects_46_eff(0, 0, 0, 0, 0, loc15, loc6[2], loc16)
      return retVal
    elif loc6[0] == 4:
      return self.idris_Effects_46_eff(0, 0, 0, 0, 0, [1,loc6[1],loc6[2],loc5], loc6[3], [65698,loc7])
    elif loc6[0] == 0:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc7, loc6[1]), loc5)


def idris_Effects_46_execEff(loc0, loc1, loc2, loc3, loc4, loc5, loc6, loc7, loc8, loc9, loc10): #Effects.execEff
    if loc8[0] == 0:
      if loc7[0] == 1:
        loc14 = self.idris_Effects_46_handle(0, 0, 0, 0, 0, 0, loc7[1])
        loc14 = self.idris__123_APPLY0_125_(loc14, loc7[2])
        loc14 = self.idris__123_APPLY0_125_(loc14, loc9)
        loc15 = [65700,loc10,loc7[1],loc7[3]]
        return self.idris__123_APPLY0_125_(loc14, loc15)

    elif loc8[0] == 1:
      if loc7[0] == 1:
        return self.idris_Effects_46_execEff(0, 0, 0, 0, 0, 0, 0, loc7[3], loc8[1], loc9, [65702,loc10,loc7[1],loc7[2]])

def idris_Effects_46_handle(loc0, loc1, loc2, loc3, loc4, loc5, loc6): #Effects.handle
    loc7 = self.idris__123_APPLY0_125_(loc6, loc2)
    loc7 = self.idris__123_APPLY0_125_(loc7, loc3)
    loc7 = self.idris__123_APPLY0_125_(loc7, loc4)
    return self.idris__123_APPLY0_125_(loc7, loc5)


def idris_Effects_46_rebuildEnv(loc0, loc1, loc2, loc3, loc4, loc5, loc6): #Effects.rebuildEnv
    if loc5[0] == 2:
      if loc6[0] == 1:
        loc11 = self.idris_Effects_46_rebuildEnv(0, 0, 0, 0, loc4,  loc5[1], loc6[3])
        retVal = [1,loc6[1],loc6[2],loc11]
        return retVal

    elif loc5[0] == 1:
      loc7 = loc5[1]
      if loc4[0] == 1:
        loc8 = loc4[1]
        loc9 = loc4[2]
        loc10 = loc4[3]
        if loc6[0] == 1:
          loc14 = self.idris_Effects_46_rebuildEnv(0, 0, 0, 0, loc10, loc7, loc6[3])
          retVal = [1,loc8,loc9,loc14]
          return retVal
      elif loc4[0] == 0:
        return [0]


    elif loc5[0] == 0:
      if loc4[0] == 1:
        retVal = [1,loc4[1],loc4[2],loc4[3]]
        return retVal
      elif loc4[0] == 0:
        return loc6




def idris_Effects_46_relabel(loc0, loc1, loc2, loc3, loc4): #Effects.relabel
    if loc4[0] == 1:
      retVal = [1,loc4[1],loc4[2],self.idris_Effects_46_relabel(0, 0, 0, 0, loc4[3])]
      return retVal
    elif loc4[0] == 0:
      return [0]



def idris_Bank_46_Main_46_runDep(loc0): #Bank.Main.runDep
    return self.idris_Effects_46_eff(0, 0, 0, 0, 0, [1,[65677],loc0,[0]], [2,[0],[4]], [65704,[65670]])

def idris_Bank_46_Main_46_runWith(loc0): #Bank.Main.runWith
    return self.idris_Effects_46_eff(0, 0, 0, 0, 0,  [1,[65686],0,[0]], [1,[2,[0],[3]],[65668,0,loc0]], [65704,[65679]])

def idris__123_APPLY0_125_(loc0, loc1): #{APPLY0}
    if loc0[0] == 65664:
      retVal = [0,[1]]
      return retVal
    elif loc0[0] == 65665:
      retVal = [1, [2,[0],[5,loc0[1],loc1]], [65664]]
      return retVal

    elif loc0[0] == 65666:
      return self.idris_Bank_46_Bank2_46__123_withdraw3_125_(loc0[1], loc0[2], loc0[3], loc1)

    elif loc0[0] == 65667:
      retVal = [1,[2,[0],[2,loc1]],[65666,loc0[2],loc0[3],loc0[1]]]
      return retVal

    elif loc0[0] == 65668:
      retVal = [1,[2,[0],[0]],[65667,loc0[1],loc1,loc0[2]]]
      return retVal

    elif loc0[0] == 65669:
      retVal = [65715,0,0,loc1]
      return retVal

    elif loc0[0] == 65670:
      return [65669]

    elif loc0[0] == 65671:
      return self.idris_Effects_46_Ethereum_46_Ether_46__64_Effects_46_Handler_36_EtherRules_58_SIO_58__33_handle_58_0(0, 0, 0, 0, loc0[1], loc0[2], loc1)

    elif loc0[0] == 65672:
      retVal = [65671,loc0[1],loc1]
      return retVal

    elif loc0[0] == 65673:
      retVal = [65672,loc1]
      return retVal

    elif loc0[0] == 65674:
      return [65673]

    elif loc0[0] == 65675:
      return [65674]

    elif loc0[0] == 65676:
      return [65675]

    elif loc0[0] == 65677:
      return [65676]

    elif loc0[0] == 65678:
      retVal = [65715,0,0,loc1]
      return retVal

    elif loc0[0] == 65679:
      return [65678]

    elif loc0[0] == 65680:
      return self.idris_Effects_46_Ethereum_46_Ether_46__64_Effects_46_Handler_36_EtherRules_58_SIO_58__33_handle_58_0(0, 0, 0, 0, loc0[1], loc0[2], loc1)

    elif loc0[0] == 65681:
      retVal = [65680,loc0[1],loc1]
      return retVal

    elif loc0[0] == 65682:
      retVal = [65681,loc1]
      return retVal

    elif loc0[0] == 65683:
      return [65682]

    elif loc0[0] == 65684:
      return [65683]

    elif loc0[0] == 65685:
      return [65684]

    elif loc0[0] == 65686:
      return [65685]

    elif loc0[0] == 65687:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[10], loc0[13]), loc1[3])

    elif loc0[0] == 65688:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc1), loc0[2])

    elif loc0[0] == 65689:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc1), loc0[2])

    elif loc0[0] == 65690:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc0[2]))

    elif loc0[0] == 65691:
      v0 = self.idris__123_APPLY0_125_(loc0[1], loc1)
      return self.idris__123_APPLY0_125_(v0, loc0[2])

    elif loc0[0] == 65692:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc0[2]), self.idris_Effects_46_relabel(0, 0, 0, 0, loc1))

    elif loc0[0] == 65693:
      retVal = [65692,loc0,loc1]
      return retVal

    elif loc0[0] == 65694:
      return self.idris_Effects_46_eff(0, 0, 0, 0, 0, loc1, self.idris__123_APPLY0_125_(loc0[1], loc0[2]), loc0[3])

    elif loc0[0] == 65695:
      retVal = [65694,loc0[1],loc1,loc0[2]]
      return retVal

    elif loc0[0] == 65696:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc0[2]), self.idris_Effects_46_rebuildEnv(0, 0, 0, 0, loc1, loc0[3], loc0[4]))

    elif loc0[0] == 65697:
      retVal = [65696,loc0[1],loc1,loc0[2],loc0[3]]
      return retVal

    elif loc0[0] == 65698:
      retVal = [65687,0,0,0,0,0,0,0,0,0,loc0[1],0,0,loc1,0]
      return retVal

    elif loc0[0] == 65699:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], loc0[2]), [1,loc0[3],loc1,loc0[4]])

    elif loc0[0] == 65700:
      retVal = [65699,loc0[1],loc1,loc0[2],loc0[3]]
      return retVal

    elif loc0[0] == 65701:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc2, loc3), [1,loc4,loc5,loc1])

    elif loc0[0] == 65702:
      retVal = [65701,loc0[1],loc1,loc0[2],loc0[3]]
      return retVal

    elif loc0[0] == 65703:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[1], 0), loc0[2])

    elif loc0[0] == 65704:
      retVal = [65703,loc0[1],loc1]
      return retVal

    elif loc0[0] == 65705:
      loc2 = loc0[1]
      return loc2.balance 

    elif loc0[0] == 65706:
      return self

    elif loc0[0] == 65707:
      return send(loc0[1], loc0[2]) #self.idris_Ethereum_46_SIO_46_send(loc2, loc3, loc1)

    elif loc0[0] == 65708:
      return msg.sender #self.idris_Ethereum_46_SIO_46_sender(loc1)

    elif loc0[0] == 65709:
      return self.idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Eq_36_Nat_58__33__61__61__58_0(loc0[1], loc1)

    elif loc0[0] == 65710:
      return self.idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Ord_36_Nat_58__33_compare_58_0(loc0, loc1)

    elif loc0[0] == 65711:
      retVal = [65710,loc1]
      return retVal

    elif loc0[0] == 65712:
      return self.idris_Prelude_46_Nat_46__123_Nat_32_instance_32_of_32_Prelude_46_Classes_46_Ord_95_lam2_125_(loc0[1], loc1)

    elif loc0[0] == 65713:
      retVal = [65712,loc1]
      return retVal

    elif loc0[0] == 65714:
      return self.idris__123_APPLY0_125_([65716,loc0[1],loc0[2],loc0[3],loc0[4],loc0[5],loc1], self.idris__123_APPLY0_125_(loc0[4], loc1))

    elif loc0[0] == 65715:
      return loc4 #self.idris_io_95_return(loc2, loc3, loc4, loc1)

    elif loc0[0] == 65716:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc0[5], loc1), loc0[6])

    elif loc0[0] == 65717:
      retVal = [65709,loc1]
      return retVal
    else:
      return 0


def idris_Prelude_46_Nat_46__123_Nat_32_instance_32_of_32_Prelude_46_Classes_46_Ord_95_lam2_125_(loc0, loc1): #Prelude.Nat.{Nat instance of Prelude.Classes.Ord_lam2}
    #legonote compare fishy
    loc2 = self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_([65711], loc0), loc1)
    if loc2[0] == 2:
      return [1]
    else:
      return [0]


def idris_Bank_46_Bank2_46__123_withdraw3_125_(loc0, loc1, loc2, loc3): #Bank.Bank2.{withdraw3}
    if loc0 == 701581095649848031: #legonote: or opposite? maybe == should be 0
      loc4 = self.idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Ord_36_Nat_58__33__62__61__58_0(loc3, loc1)
    else:
      loc4 = [0]

    if loc4[0] == 0:
      retVal = [0,[0]]
      return retVal
    elif loc4[0] == 1:
      retVal = [1,[2,[0],[3]],[65665,loc1,loc2]]
      return retVal


def idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Eq_36_Nat_58__33__61__61__58_0(loc0, loc1): #Prelude.Classes.Prelude.Nat.@Prelude.Classes.Eq$Nat:!==:0
    if loc1 == 0:
      if loc0 == 0:
        return [1]
      else:
        return [0]
    else:
      if loc0 == 0:
        return [0]
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_([65717], loc0-1), loc1-1)


def idris_Effects_46_Ethereum_46_Ether_46__64_Effects_46_Handler_36_EtherRules_58_SIO_58__33_handle_58_0(loc0, loc1, loc2, loc3, loc4, loc5, loc6): #Effects.Ethereum.Ether.@Effects.Handler$EtherRules:SIO:!handle:0
    if loc5[0] == 2:
      retVal = [65714,0,0,0,[65705,loc5[1]],[65688,loc6,loc4]]
      return retVal
    elif loc5[0] == 0:
      retVal = [65714,0,0,0,[65706],[65689,loc6,loc4]]
      return retVal

    elif loc5[0] == 4:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc6, [0]), loc4)

    elif loc5[0] == 5:
      retVal = [65714,0,0,0,[65707,loc5[2],loc5[1]],[65690,loc6,loc4]]
      return retVal

    elif loc5[0] == 3:
      retVal = [65714,0,0,0,[65708],[65691,loc6,loc4]]
      return retVal

    elif loc5[0] == 1:
      return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_(loc6, loc4), loc4)


def idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Ord_36_Nat_58__33__62__61__58_0(loc0, loc1): #Prelude.Classes.Prelude.Nat.@Prelude.Classes.Ord$Nat:!>=:0
    loc2 = self.idris__123_APPLY0_125_([65713], loc0) #legonote ordshit
    loc2 = self.idris__123_APPLY0_125_(loc2, loc1)
    if loc2[0] == 0:
      return self.idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Eq_36_Nat_58__33__61__61__58_0(loc0, loc1)
    elif loc2[0] == 1:
      return  [1]


def idris_Prelude_46_Classes_46_Prelude_46_Nat_46__64_Prelude_46_Classes_46_Ord_36_Nat_58__33_compare_58_0(loc0, loc1): #Prelude.Classes.Prelude.Nat.@Prelude.Classes.Ord$Nat:!compare:0
    if loc1 == 0:
      if loc0 == 0:
        return [1]
      #legonote wtf @ loc2, not used
      return [2]
      #loc2 = 1
      #loc2 = (loc0 - loc2)
      #retVal = [2]
      #return retVal

    loc2 = (loc1 - 1)
    if loc0 == 0:
      return [0]
    return self.idris__123_APPLY0_125_(self.idris__123_APPLY0_125_([65711], loc0 - 1), loc2)



